BOOST_CPPFLAGS =
BOOST_CXXFLAGS =
BOOST_LDFLAGS  =
BOOST_LDLIBS   = \
	-l${LIBBOOST_PYTHON} \
	-lboost_filesystem   \
	-lboost_system       \
	-lboost_regex        \



GLOG_CPPFLAGS = $(shell pkg-config libglog --cflags)
GLOG_CXXFLAGS =
GLOG_LDFLAGS  =
GLOG_LDLIBS   = $(shell pkg-config libglog --libs)

QT_INCPATH = -I/usr/share/qt4/mkspecs/linux-g++ \
	      -I/qtgui -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui \
              -I/usr/include/qt4 -I. -Iqtgui -I. \

QT_LFLAGS        = -Wl,-O1
QT_LIBS = $(SUBLIBS)  -L/usr/lib/arm-linux-gnueabihf -lqscintilla2 -lSDL2 -lGL -lQtGui -lQtCore -lpthread \

QT_CXXFLAGS = -pipe -O2 -Wall -W -D_REENTRANT
QT_DEFINES = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED

QT_INCFLAGS = -isystem /usr/include/qt4/QtXml    \
              -isystem /usr/include/qt4/QtXmlPatterns     \
	      -isystem /usr/include/qt4/QtGui    \
              -isystem /usr/include/qt4/         \
              -isystem /usr/include/qt4/Qt       \
              -isystem /usr/include/qt4/QtCore   \
              -isystem /usr/include/qt4/QSci     \
              -isystem /usr/include/qt4/Qt3Support     \
              -isystem /usr/include/qt4/QtBus     \
              -isystem /usr/include/qt4/QtDeclarative     \
              -isystem /usr/include/qt4/QtDesigner     \
              -isystem /usr/include/qt4/QtHelp     \
              -isystem /usr/include/qt4/QtNetwork     \
              -isystem /usr/include/qt4/QtOpenGL     \
              -isystem /usr/include/qt4/QtScript     \
              -isystem /usr/include/qt4/QtScriptTools     \
              -isystem /usr/include/qt4/QtSql     \
              -isystem /usr/include/qt4/QtSvg     \
              -isystem /usr/include/qt4/QtTest     \
              -isystem /usr/include/qt4/QtUiTools     \
              -isystem /usr/include/qt4/QtWebKit     \
              -isystem /usr/include/qt4/QtXml    \
              -isystem /usr/include/qt4/QtXmlPatterns     \


ifeq "$(PLATFORM)" "desktop"
	GL_CPPFLAGS = $(shell pkg-config gl --cflags)
	GL_CXXFLAGS =
	GL_LDFLAGS  =
	GL_LDLIBS   = $(shell pkg-config gl --libs)

	GRAPHICS_CPPFLAGS = $(GL_CPPFLAGS)
	GRAPHICS_CXXFLAGS = $(GL_CXXFLAGS)
	GRAPHICS_LDFLAGS  = $(GL_LDFLAGS)
	GRAPHICS_LDLIBS   = $(GL_LDLIBS)
	CPPFLAGS += -DUSE_GL -g -Wall -Wextra

#	WARNINGS += -Werror
else
	X11_CPPFLAGS = $(shell pkg-config x11 --cflags)
	X11_CXXFLAGS =
	X11_LDFLAGS  =
	X11_LDLIBS   = $(shell pkg-config x11 --libs)

	# From hello_triangle
	GLES_CPPFLAGS = \
		-isystem /opt/vc/include                           \
		-isystem /opt/vc/include/interface/vmcs_host/linux \
		-isystem /opt/vc/include/interface/vcos/pthreads   \

	GLES_CXXFLAGS =
	GLES_LDFLAGS  = -L/opt/vc/lib/
	GLES_LDLIBS   = -lGLESv2 -lEGL -lbcm_host -lpthread

	GRAPHICS_CPPFLAGS = $(GLES_CPPFLAGS) $(X11_CPPFLAGS)
	GRAPHICS_CXXFLAGS = $(GLES_CXXFLAGS) $(X11_CXXFLAGS)
	GRAPHICS_LDFLAGS  = $(GLES_LDFLAGS)  $(X11_LDFLAGS)
	GRAPHICS_LDLIBS   = $(GLES_LDLIBS)   $(X11_LDLIBS)
	CPPFLAGS += -DUSE_GLES
endif



# Filter to prevent warnings about -Wstrict-prototypes not being valid for C++
PYTHON_CPPFLAGS = $(filter-out -Wstrict-prototypes,$(shell python${PYTHON_VERSION}-config --cflags))
PYTHON_CXXFLAGS =
PYTHON_LDFLAGS  = $(shell python${PYTHON_VERSION}-config --ldflags)
PYTHON_LDLIBS   = $(shell python${PYTHON_VERSION}-config --libs)



SDL_CPPFLAGS = $(shell sdl2-config --cflags)
SDL_CXXFLAGS =
SDL_LDFLAGS  =
SDL_LDLIBS   = $(shell sdl2-config --libs) -lSDL2_image -lSDL2_ttf -lSDL2_mixer



TINYXML_CPPFLAGS = $(shell pkg-config tinyxml --cflags)
TINYXML_CXXFLAGS =
TINYXML_LDFLAGS  =
TINYXML_LDLIBS   = $(shell pkg-config tinyxml --libs)

TMXPARSER_CPPFLAGS = -isystem ./tmx-parser/TmxParser
TMXPARSER_CXXFLAGS =
TMXPARSER_LDFLAGS  = -L./tmx-parser
TMXPARSER_LDLIBS   = -ltmxparser

JSON_INC_FLAGS = -isystem ./json-parser

JSONNET_LDFLAGS    = -L./jsonnet
JSONNET_LDLIBS     = -ljsonnet

ZLIB_CPPFLAGS = $(shell pkg-config zlib --cflags)
ZLIB_CXXFLAGS =
ZLIB_LDFLAGS  =
ZLIB_LDLIBS   = $(shell pkg-config zlib --libs)
